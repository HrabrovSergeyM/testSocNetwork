{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","classes","dialog","message","DialogItem","path","id","to","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","messagesPage","dialogsElements","dialogsData","map","element","key","messagesElement","messagesData","React","createRef","isAuth","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","compose","connect","state","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCWhMC,EARC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAQC,QAASH,EAAMI,U,QCQhCC,EAVI,SAACL,GAClB,IAAIM,EAAO,YAAcN,EAAMO,GAE/B,OACE,yBAAKN,UAAWC,IAAQC,QACtB,kBAAC,IAAD,CAASK,GAAIF,GAAON,EAAMS,Q,yCCD1BC,EAAcC,YAAiB,IAoBtBC,cAAU,CAAEC,KAAM,2BAAlBD,EAlBQ,SAACZ,GACtB,OACE,0BAAMc,SAAUd,EAAMe,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBACZZ,KAAK,oBAGT,6BACE,6CCyBOa,EAnCC,SAACtB,GACHA,EAAMuB,aAAlB,IAEIC,EAAkBxB,EAAMuB,aAAaE,YAAYC,KAAI,SAACC,GAAD,OACvD,kBAAC,EAAD,CAAYlB,KAAMkB,EAAQlB,KAAMmB,IAAKD,EAAQpB,GAAIA,GAAIoB,EAAQpB,QAG3DsB,EAAkB7B,EAAMuB,aAAaO,aAAaJ,KAAI,SAACC,GAAD,OACxD,kBAAC,EAAD,CAASC,IAAKD,EAAQpB,GAAIH,QAASuB,EAAQvB,aAGrB2B,IAAMC,YAM9B,OAAKhC,EAAMiC,OAGT,yBAAKhC,UAAWC,IAAQgC,SACtB,yBAAKjC,UAAWC,IAAQiC,cAAeX,GACvC,yBAAKvB,UAAWC,IAAQkC,UACrBP,EAED,6BACE,kBAAC,EAAD,CAAgBf,SAbJ,SAACuB,GACnBrC,EAAMsC,YAAYD,EAAOE,sBAGD,kBAAC,IAAD,CAAU/B,GAAI,Y,uBCP3BgC,sBACbC,aAdoB,SAACC,GACrB,MAAO,CACLnB,aAAcmB,EAAMnB,iBAGC,SAACoB,GACxB,MAAO,CACLL,YAAa,SAACC,GACZI,EAASC,YAAmBL,SAOhCM,IAFaL,CAGblB","file":"static/js/4.814373c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dialogs_root__1vVFM\",\"dialogs\":\"Dialogs_dialogs__3XJ9h\",\"dialogsItems\":\"Dialogs_dialogsItems__1CLGH\",\"dialog\":\"Dialogs_dialog__12A6G\",\"messages\":\"Dialogs_messages__2JIEI\",\"message\":\"Dialogs_message__FMjgU\"};","import React from 'react'\r\nimport classes from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={classes.dialog}>{props.message}</div> \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          placeholder=\"Enter your message\"\r\n          name=\"newMessageBody\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {\r\n  addMessageActionCreator,\r\n  updateNewMessageTextActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, Form, reduxForm } from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.messagesPage;\r\n\r\n  let dialogsElements = props.messagesPage.dialogsData.map((element) => (\r\n    <DialogItem name={element.name} key={element.id} id={element.id} />\r\n  ));\r\n\r\n  let messagesElement = props.messagesPage.messagesData.map((element) => (\r\n    <Message key={element.id} message={element.message} />\r\n  ));\r\n\r\n  let newMessageElement = React.createRef();\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\r\n      <div className={classes.messages}>\r\n        {messagesElement}\r\n\r\n        <div>\r\n          <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport { sendMessageCreator } from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}