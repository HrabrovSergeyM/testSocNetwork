{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","asssets/images/preloader.svg","components/common/preloader/Preloader.module.css","api/api.js","components/Navbar/Navbar.module.css","components/Profile/Profile.module.css","serviceWorker.js","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profileReducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","redux/appReducer.js","redux/reduxStore.js","App.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","redux/usersReducer.js","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","hoc/withAuthRedirect.js","redux/dialogsReducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","authAPI","me","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put","Boolean","window","location","hostname","match","Header","props","className","classes","header","src","loginBlock","isAuth","onClick","to","initialState","setAuthUserData","type","payload","getAuthUserData","dispatch","a","resultCode","id","authReducer","state","action","HeaderContainer","this","React","Component","connect","auth","Navbar","nav","item","activeClassName","active","Post","message","likesCount","maxLength30","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","console","log","postsElement","posts","map","element","createRef","postsBlog","values","addPost","newPostText","profile","setStatus","profileReducer","newPost","MyPostsContainer","profilePage","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","descriptionBlog","photos","large","fullName","aboutMe","contacts","vk","Preloader","Profile","ProfileContainer","params","authorizedUserId","history","push","getUserProfile","compose","withRouter","withAuthRedirect","News","Music","Settings","LoginReduxForm","Input","error","formSummaryError","messages","length","stopSubmit","_error","formData","initialized","appReducer","reducers","combineReducers","messagesPage","dialogsReducer","usersPage","usersReducer","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","UsersContainer","App","initializeApp","path","render","exact","fallback","AppContainer","MainApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","FormControl","input","meta","child","hasError","touched","formControl","children","restProps","preloader","users","totalUserCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","setToggleIsFetching","setFollowingProgress","items","totalCount","u","followed","filter","mapStateToPropsForRedirect","RedirectComponent","dialogsData","messagesData","sendMessageCreator","newMessage"],"mappings":"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","file":"static/js/main.a7ae0660.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3dyrL\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.abffbc11.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1n_wp\"};","import * as axios from \"axios\";\r\nimport { follow } from \"../redux/usersReducer\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  headers: {\r\n    \"API-KEY\": \"001c36a3-ba71-40a3-a26a-dec8b0b0d69d\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n  getProfile(userId) {\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(\"auth/login\", { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(\"auth/login\");\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(\"profile/status/\" + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(\"profile/status\", { status: status });\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2vI0-\",\"item\":\"Navbar_item__2EgWV\",\"active\":\"Navbar_active__AhAWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3sLrR\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\"></img>\r\n\r\n      <div className={classes.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.logout}>Log out</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  // делаем функцию асинхронной\r\n  let response = await authAPI.me(); // await заставляет ждать до тех пор, пока промис справа от await не выполнится\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some error\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>\r\n          Dialogs\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/news\" activeClassName={classes.active}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/music\" activeClassName={classes.active}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/settings\" activeClassName={classes.active}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\"></img>\r\n      <div>\r\n        <span>{props.message}</span>\r\n      </div>\r\n      <div>\r\n        <span>{props.likesCount} Like</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n  console.log(\"render myposts\");\r\n  let postsElement = props.posts.map((element) => (\r\n    <Post message={element.message} likesCount={element.likesCount} />\r\n  ));\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n    // props.dispatch(addPostActionCreator());\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlog}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={classes.posts}>{postsElement}</div>\r\n    </div>\r\n  );\r\n};\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          placeholder=\"Post message\"\r\n          validate={[required, maxLength30]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\n\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      message: \"Hi, how are u?\",\r\n      likesCount: 15,\r\n    },\r\n    {\r\n      id: 2,\r\n      message: \"It is my first post\",\r\n      likesCount: 12,\r\n    },\r\n  ],\r\n\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 3,\r\n        message: action.newPostText,\r\n        likesCount: 3,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: \"\",\r\n      };\r\n    }\r\n\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n  return { type: ADD_POST, newPostText };\r\n};\r\nexport const setUserProfile = (profile) => {\r\n  return { type: SET_USER_PROFILE, profile };\r\n};\r\nexport const setStatus = (status) => {\r\n  return { type: SET_STATUS, status };\r\n};\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await usersAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator,\r\n  updateNewPostTextActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\n\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activateEditMode = () => {\r\n    debugger;\r\n    console.log(\"this:\", this);\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  };\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode}>\r\n              {this.props.status}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={this.deactivateEditMode}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"></img>\r\n      </div> */}\r\n      <div className={classes.descriptionBlog}>\r\n        {\" \"}\r\n        <img src={props.profile.photos.large} />\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n        <div>Full name: {props.profile.fullName}</div>\r\n        <div>About me: {props.profile.aboutMe}</div>\r\n        <div>Contacts: {props.profile.contacts.vk}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\n\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from 'react'\r\nimport classes from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n    <div>\r\n        <p>\r\n            News\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react'\r\nimport classes from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n    <div>\r\n        <p>\r\n            Music\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport classes from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n        <p>\r\n            Settings\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport { login } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport classes from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          validate={[required]}\r\n          placeholder={\"Email\"}\r\n          name={\"email\"}\r\n          component={Input}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          validate={[required]}\r\n          placeholder={\"Password\"}\r\n          name={\"password\"}\r\n          component={Input}\r\n          type={\"password\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} />{\" \"}\r\n        remember me\r\n      </div>\r\n      {props.error && (\r\n        <div className={classes.formSummaryError}>{props.error}</div>\r\n      )}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  promise.then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\nimport Login from \"./components/Login/Login\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { initializeApp } from \"./redux/appReducer\";\nimport { compose } from \"redux\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport store from \"./redux/reduxStore\";\nimport { Provider } from \"react-redux\";\nimport { Suspense } from \"react\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nconst UsersContainer = React.lazy(() =>\n  import(\"./components/Users/UsersContainer\")\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n          <Route\n            exact\n            path=\"/dialogs\"\n            render={() => {\n              return (\n                <Suspense\n                  fallback={\n                    <div>\n                      <Preloader />\n                    </div>\n                  }\n                >\n                  <DialogsContainer />\n                </Suspense>\n              );\n            }}\n          />\n          <Route\n            path=\"/users\"\n            render={() => {\n              return (\n                <Suspense\n                  fallback={\n                    <div>\n                      <Preloader />\n                    </div>\n                  }\n                >\n                  <UsersContainer />\n                </Suspense>\n              );\n            }}\n          />\n          <Route path=\"/news\" render={() => <News />} />\n          <Route path=\"/music\" render={() => <Music />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n          <Route path=\"/login\" render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst MainApp = (props) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default MainApp;\n","import * as serviceWorker from \"./serviceWorker\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport MainApp from \"./App\";\n\nReactDOM.render(<MainApp />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\nexport const maxLength30 = (value) => {\r\n  if (value && value.length > 30) return \"Max length is 30 symbols\";\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div\r\n      className={\r\n        classes.formControl +\r\n        \" \" +\r\n        (meta.touched && meta.error ? classes.error : \"\")\r\n      }\r\n    >\r\n      <div>{props.children}</div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport preloader from \"../../../asssets/images/preloader.svg\";\r\nimport classes from \"../preloader/Preloader.module.css\";\r\n\r\nlet Preloader = () => {\r\n  return (\r\n    <div className={classes.preloader}>\r\n      <img src={preloader} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3TViv\",\"error\":\"FormsControls_error__3blxe\",\"formSummaryError\":\"FormsControls_formSummaryError__1Qchz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlog\":\"ProfileInfo_descriptionBlog__2KA3Q\"};","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USER_COUNT = \" SET_TOTAL_USER_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUserCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_TOTAL_USER_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUserCount: action.totalUserCount,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n  return {\r\n    type: UNFOLLOW,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n  return {\r\n    type: SET_USERS,\r\n    users,\r\n  };\r\n};\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage,\r\n  };\r\n};\r\n\r\nexport const setTotalUserCount = (totalUserCount) => {\r\n  return {\r\n    type: SET_TOTAL_USER_COUNT,\r\n    totalUserCount,\r\n  };\r\n};\r\n\r\nexport const setToggleIsFetching = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n};\r\n\r\nexport const setFollowingProgress = (isFetching, userId) => {\r\n  return {\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n  };\r\n};\r\n\r\n//thunk\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(setToggleIsFetching(true));\r\n\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setToggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUserCount(data.totalCount));\r\n    dispatch(setCurrentPage(currentPage));\r\n  };\r\n};\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    dispatch(setFollowingProgress(true, userId));\r\n    let response = await usersAPI.follow(userId);\r\n    if (response.data.resultCode == 0) {\r\n      dispatch(followSuccess(userId));\r\n    }\r\n    dispatch(setFollowingProgress(false, userId));\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    dispatch(setFollowingProgress(true, userId));\r\n    let response = await usersAPI.unfollow(userId);\r\n    if (response.data.resultCode == 0) {\r\n      dispatch(unfollowSuccess(userId));\r\n    }\r\n    dispatch(setFollowingProgress(false, userId));\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__btvHI\",\"loginBlock\":\"Header_loginBlock__2b43c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3VRfg\",\"postsBlog\":\"MyPosts_postsBlog__WGpeX\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n// const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nlet initialState = {\r\n  dialogsData: [\r\n    {\r\n      id: 1,\r\n      name: \"Serg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Ars\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Andrew\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Leo\",\r\n    },\r\n  ],\r\n  messagesData: [\r\n    {\r\n      id: 1,\r\n      message: \"Hi\",\r\n    },\r\n    {\r\n      id: 2,\r\n      message: \"How r u?\",\r\n    },\r\n    {\r\n      id: 3,\r\n      message: \"Yo\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      let newMessage = action.newMessage;\r\n      return {\r\n        ...state,\r\n\r\n        messagesData: [...state.messagesData, { id: 5, message: newMessage }],\r\n      };\r\n    }\r\n\r\n    // case UPDATE_NEW_MESSAGE_TEXT: {\r\n    //   return {\r\n    //     ...state,\r\n    //     newMessageText: action.newText,\r\n    //   };\r\n    // }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessage) => {\r\n  return { type: SEND_MESSAGE, newMessage };\r\n};\r\n\r\n// export const updateNewMessageTextActionCreator = (text) => {\r\n//   return { type: UPDATE_NEW_MESSAGE_TEXT, newText: text };\r\n// };\r\n\r\nexport default dialogsReducer;\r\n"],"sourceRoot":""}